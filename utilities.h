void initialize( int *argc, char ***argv );
void finalize();
void setState( int newState );
int getRandomNumberOfRooms( int P );
void incrementLamport( int lamportIn );
int max( int numberA, int numberB );
void sendMessageForAll( int messageType );
void sendACKPForAllWaitingForRoom();
void sendMessageForSingleThread( int messageType, int receiverId );
bool isMyLamportLower( int inputLamport, int inputThreadId, int messageType );
void incrementCounter( int messageSender, int counterType );
bool senderNotInAgreedForRoom( int messageSender );
bool senderNotInAgreedForLift( int messageSender );
bool gotEnoughACKP();
bool isEnoughFreeRooms();
bool gotEnoughACKW();
bool isEnoughFreeLifts();
void waitingForRoomPush( int messageSender, int messageValue );
void agreedForRoomPush( int messageSender, int messageValue );
void waitingForLiftPush( int messageSender );
void agreedForLiftPush( int messageSender );
void useLift();
int getRandomTime();
void moveWaitingForRoomToAgreedForRoom();
void moveWaitingForLiftToAgreedForLift();
void moveAgreedForLiftToPreviousAgreedForLift();
void moveAgreedForRoomToPreviousAgreedForRoom();
void removeFromAgreedOrPreviousAgreedForLift( int messageSender );
void removeFromAgreedOrPreviousAgreedForRoom( int messageSender );
void useRooms();